<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on CUITPF</title>
    <link>http://localhost:1313/categories/maven/</link>
    <description>Recent content in Maven on CUITPF</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>© 2025 </copyright>
    <lastBuildDate>Tue, 29 Nov 2022 14:45:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/maven/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>maven子pom没有继承到父pom依赖版本</title>
      <link>http://localhost:1313/posts/post-227/</link>
      <pubDate>Tue, 29 Nov 2022 14:45:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/post-227/</guid>
      <description>&lt;p&gt;&lt;a
  href=&#34;http://localhost:1313/tag/maven&#34;&gt;maven&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Java项目很多都会有子module，一般父项目没有逻辑代码，在父项目pom.xml中注明依赖、version和其他一些公用的东西，子module的pom继承父pom，子pom就不用写依赖的版本了，但至少也要写用到依赖的groupId、artifactId，这样默认会使用父项目依赖的版本。子pom也可以写版本，这样就不受父pom影响了，和继承类似，但还是有些区别。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用时需要注意，我就是忘了其中一项，没有生效：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父pom需要添加&lt;code&gt;&amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;父pom需要用&lt;code&gt;&amp;lt;modules&amp;gt;&amp;lt;module&amp;gt;子module名&amp;lt;/module&amp;gt;&amp;lt;/modules&amp;gt;&lt;/code&gt;注明子module有哪些&lt;/li&gt;
&lt;li&gt;父pom声明依赖时&lt;code&gt;&amp;lt;dependencies&amp;gt;&lt;/code&gt;外要嵌套&lt;code&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/code&gt;才能被子pom继承到，我就是忘了这点&lt;/li&gt;
&lt;li&gt;子pom需要通过&lt;code&gt;&amp;lt;parent&amp;gt;&amp;lt;/parent&amp;gt;&lt;/code&gt;指定父项目，声明依赖时就默认会用父pom中的版本了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dependencyManagement：像上面提到的，一般在父项目中会声明这个元素，和普通依赖用法类似，这个元素并不会真的引入依赖，只会标明依赖和版本，子项目会从父项目找&lt;code&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/code&gt;从而确定需要引用依赖版本，类似于模板模式。&lt;/p&gt;
&lt;p&gt;父pom例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 省略无关配置 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;pom&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 注明所有子module --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;module1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;module2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 以Lombk为例 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.projectlombok&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lombok&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.18.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;子pom module1例子：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 省略无关配置 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;父项目group&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;父项目artifactId&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;父项目version&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;relativePath&amp;gt;&lt;/span&gt;../pom.xml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/relativePath&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--这样会使用父pom中的依赖版本1.18.8，如果这里写version就不会使用父pom里的版本了--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.projectlombok&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lombok&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;relativePath 
    &lt;div id=&#34;relativepath&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#relativepath&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;指定查找该父项目pom.xml的(相对)路径。默认顺序：relativePath &amp;gt; 本地仓库 &amp;gt; 远程仓库&lt;/li&gt;
&lt;li&gt;没有relativePath标签等同…/pom.xml, 即默认从当前pom文件的上一级目录找&lt;/li&gt;
&lt;li&gt;表示不从relativePath找, 直接从本地仓库找,找不到再从远程仓库找&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;经过 maven3.6版本测试，似乎没有relativePath标签时，它没有从当前pom文件的上一级目录找，子模块继承不到父模块中dependencyManagement中包的version信息。子模块想要用父模块pom中的版本，请注意配置relativePath属性！&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>build-helper-maven-plugin 简单讲解</title>
      <link>http://localhost:1313/posts/post-246/</link>
      <pubDate>Wed, 08 Jun 2022 06:20:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/post-246/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;简介 
    &lt;div id=&#34;简介&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e7%ae%80%e4%bb%8b&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;官方文档 
    &lt;div id=&#34;官方文档&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e5%ae%98%e6%96%b9%e6%96%87%e6%a1%a3&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a
  href=&#34;https://www.mojohaus.org/build-helper-[maven]%28https://so.csdn.net/so/search?q=maven&amp;amp;spm=1001.2101.3001.7020%29&#34;
    target=&#34;_blank&#34;
  &gt;https://www.mojohaus.org/build-helper-[maven](https://so.csdn.net/so/search?q=maven&amp;spm=1001.2101.3001.7020)&lt;/a&gt;-plugin/index.html&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;常用的Goals 
    &lt;div id=&#34;常用的goals&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e7%9a%84goals&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:add-source&lt;/td&gt;
          &lt;td&gt;添加一个或者多个目录到POM.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:add-test-source&lt;/td&gt;
          &lt;td&gt;添加测试目录到 POM.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:add-resource&lt;/td&gt;
          &lt;td&gt;添加资源目录到POM.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:add-test-resource&lt;/td&gt;
          &lt;td&gt;添加测试资源目录到POM.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:attach-artifact&lt;/td&gt;
          &lt;td&gt;附加要安装和部署的其他部件。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:maven-version&lt;/td&gt;
          &lt;td&gt;设置一个包含当前版本的 maven 的属性。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:regex-property&lt;/td&gt;
          &lt;td&gt;通过将正则表达式替换规则应用于提供的值来设置属性。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:regex-properties&lt;/td&gt;
          &lt;td&gt;通过将正则表达式替换规则应用于提供的值来设置属性.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:released-version&lt;/td&gt;
          &lt;td&gt;解决本项目最新发布的版本.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:parse-version&lt;/td&gt;
          &lt;td&gt;将版本解析为不同的属性.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:remove-project-artifact&lt;/td&gt;
          &lt;td&gt;从本地存储库中删除项目的工件.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:reserve-network-port&lt;/td&gt;
          &lt;td&gt;保留随机和未使用的网络端口列表.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:local-ip&lt;/td&gt;
          &lt;td&gt;检索当前主机 IP 地址.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:hostname&lt;/td&gt;
          &lt;td&gt;检索当前主机名.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:cpu-count&lt;/td&gt;
          &lt;td&gt;检索可用 CPU 的数量.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:timestamp-property&lt;/td&gt;
          &lt;td&gt;根据当前日期和时间设置属性.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:uptodate-property&lt;/td&gt;
          &lt;td&gt;根据文件集的输出相对于其输入是否是最新的来设置属性.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:uptodate-properties&lt;/td&gt;
          &lt;td&gt;根据多个文件集的输出相对于它们的输入是否是最新的来设置多个属性.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;build-helper:rootlocation&lt;/td&gt;
          &lt;td&gt;设置定义多模块构建的根文件夹的属性.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 class=&#34;relative group&#34;&gt;简单用法 
    &lt;div id=&#34;简单用法&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e7%ae%80%e5%8d%95%e7%94%a8%e6%b3%95&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;project&amp;gt;
 
  &amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;

 &amp;lt;!--独立打包--&amp;gt;
             &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.1.1.RELEASE&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;fork&amp;gt;true&amp;lt;/fork&amp;gt; &amp;lt;!-- 如果没有该配置，devtools不会生效 --&amp;gt;
                &amp;lt;/configuration&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;

&amp;lt;!-- domain 打包进去--&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;build-helper-maven-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;3.3.0&amp;lt;/version&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;!--id是必须的，常常和goals是一样的--&amp;gt;
            &amp;lt;id&amp;gt;add-source&amp;lt;/id&amp;gt;
            &amp;lt;phase&amp;gt;generate-sources&amp;lt;/phase&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;add-source&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;!--在configuration中设置goals的具体属性--&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;!--这些熟悉可以通过文档获得--&amp;gt;
              &amp;lt;sources&amp;gt;
                &amp;lt;source&amp;gt;${basedir}/src/main/java&amp;lt;/source&amp;gt;
                &amp;lt;source&amp;gt;${basedir}/src/main/domain&amp;lt;/source&amp;gt;
                ...
              &amp;lt;/sources&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;
          &amp;lt;!--在比如下面的，可以获得当前时间--&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;timestamp-property&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;timestamp-property&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
              &amp;lt;configuration&amp;gt;
                  &amp;lt;name&amp;gt;current.time&amp;lt;/name&amp;gt;
                  &amp;lt;pattern&amp;gt;yyyyMMddHHmmss&amp;lt;/pattern&amp;gt;
                  &amp;lt;timeZone&amp;gt;GMT+8&amp;lt;/timeZone&amp;gt;
              &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;获得当前时间的那个，可以通过configuration的name在pom的其他地方通过${current.time}来引用当前时间&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>maven编码</title>
      <link>http://localhost:1313/posts/post-374/</link>
      <pubDate>Fri, 01 Dec 2017 08:51:14 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/post-374/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  &amp;lt;properties&amp;gt;
        &amp;lt;!-- 所有工程中,对依赖的根组件(root jar)的版本维护 --&amp;gt;
        &amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
          &amp;lt;!-- 统一字符集 --&amp;gt;
	    &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
	  &amp;lt;/properties&amp;gt;
	  
	  
	  
	  
	  
	  
	  &amp;lt;build&amp;gt;
	      &amp;lt;finalName&amp;gt;springBoot&amp;lt;/finalName&amp;gt;
	      &amp;lt;plugins&amp;gt;
	      	&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
             &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
             &amp;lt;version&amp;gt;3.3&amp;lt;/version&amp;gt;
             &amp;lt;configuration&amp;gt;
                 &amp;lt;source&amp;gt;${java.version}&amp;lt;/source&amp;gt;
                 &amp;lt;target&amp;gt;${java.version}&amp;lt;/target&amp;gt;
                 &amp;lt;encoding&amp;gt;${project.build.sourceEncoding}&amp;lt;/encoding&amp;gt;
             &amp;lt;/configuration&amp;gt;
	      &amp;lt;/plugins&amp;gt;
	  &amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
    <item>
      <title>一小时教你学会 Maven 项目的构建与管理(3)</title>
      <link>http://localhost:1313/other/post-388/</link>
      <pubDate>Sun, 29 Oct 2017 16:47:23 +0000</pubDate>
      
      <guid>http://localhost:1313/other/post-388/</guid>
      <description>&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Maven翻译成中文是“专家、内行”。Maven是Apache组织中一个颇为成功的开源项目，Maven主要服务于基于Java平台的项目构建、依赖管理和项目信息管理的优秀工具。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-来自小马哥的故事&lt;/p&gt;
&lt;hr&gt;

&lt;h2 class=&#34;relative group&#34;&gt;用 nexus 搭建 Maven 私服 
    &lt;div id=&#34;用-nexus-搭建-maven-私服&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e7%94%a8-nexus-%e6%90%ad%e5%bb%ba-maven-%e7%a7%81%e6%9c%8d&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Nexus下载地址：&lt;a
  href=&#34;http://www.sonatype.org/nexus/archived/&#34;title=&#34;http://www.sonatype.org/nexus/archived/&#34;
    target=&#34;_blank&#34;
  &gt;http://www.sonatype.org/nexus/archived/&lt;/a&gt;&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;Nexus安装启动与使用 
    &lt;div id=&#34;nexus安装启动与使用&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#nexus%e5%ae%89%e8%a3%85%e5%90%af%e5%8a%a8%e4%b8%8e%e4%bd%bf%e7%94%a8&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;公司内部大部分人的电脑不能访问公网，不能从maven的中央仓库下载依赖，因此找一台有公网权限的机器搭建nexus私服，其他项目组人员连接到这个私服上即可。1.节省了下载jar包依赖的过程，不必每个人都去下载jar包的依赖&lt;/p&gt;
&lt;p&gt;软件准备：jdk1.7、maven-3.5.0、Nexus 2.12.0-01&lt;/p&gt;

&lt;h4 class=&#34;relative group&#34;&gt;Nexus 2.12.0-01下载 
    &lt;div id=&#34;nexus-2120-01下载&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#nexus-2120-01%e4%b8%8b%e8%bd%bd&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;






&lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; alt=&#34;Nexus 2.12.0-01下载&#34; src=&#34;https://img.maruifu.com/images/blog/2017/10/rq6ukqcblagk8rkusal39kqf9d.png&#34;&gt;

  
    &lt;figcaption&gt;Nexus 2.12.0-01下载&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Windows平台下载zip格式 下载nexus-2.12.0-01-bundle.zip解压到本地磁盘&lt;/p&gt;
&lt;p&gt;D:\develop\nexus\nexus-2.12.0-01&lt;/p&gt;
&lt;p&gt;在D:\develop\nexus\nexus-2.12.0-01\bin\jsw目录下有很多不同的操作系统版本，我的系统是Win7 64位，选择windows-x86-64目录。&lt;/p&gt;

&lt;h4 class=&#34;relative group&#34;&gt;windows-x86-64目录说明 
    &lt;div id=&#34;windows-x86-64目录说明&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#windows-x86-64%e7%9b%ae%e5%bd%95%e8%af%b4%e6%98%8e&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;






&lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; alt=&#34;windows-x86-64目录说明&#34; src=&#34;https://img.maruifu.com/images/blog/2017/10/2bkvr21g40ilkpvt8hk7g085io.png&#34;&gt;

  
    &lt;figcaption&gt;windows-x86-64目录说明&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>一小时教你学会 Maven 项目的构建与管理(2)</title>
      <link>http://localhost:1313/other/post-389/</link>
      <pubDate>Sun, 29 Oct 2017 16:18:58 +0000</pubDate>
      
      <guid>http://localhost:1313/other/post-389/</guid>
      <description>&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Maven翻译成中文是“专家、内行”。Maven是Apache组织中一个颇为成功的开源项目，Maven主要服务于基于Java平台的项目构建、依赖管理和项目信息管理的优秀工具。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-来自小马哥的故事&lt;/p&gt;
&lt;hr&gt;

&lt;h2 class=&#34;relative group&#34;&gt;四种 Maven 项目创建方式 
    &lt;div id=&#34;四种-maven-项目创建方式&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e5%9b%9b%e7%a7%8d-maven-%e9%a1%b9%e7%9b%ae%e5%88%9b%e5%bb%ba%e6%96%b9%e5%bc%8f&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;手动方式构建 
    &lt;div id=&#34;手动方式构建&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e6%89%8b%e5%8a%a8%e6%96%b9%e5%bc%8f%e6%9e%84%e5%bb%ba&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Maven项目由一个自己默认的配置，使用者不需要修改那些约定的内容，这就是“约定优于配置”，按照Maven项目目录约定，手动创建各个文件夹即可，一般不会使用这种方式。&lt;/p&gt;
&lt;p&gt;动态web的Maven项目的目录约定如下图所示： 






&lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; alt=&#34;Maven项目目录约定&#34; src=&#34;https://img.maruifu.com/images/blog/2017/10/78gda4vsaigslpn42j2n84eair.png&#34;&gt;

  
    &lt;figcaption&gt;Maven项目目录约定&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;命令行 
    &lt;div id=&#34;命令行&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e5%91%bd%e4%bb%a4%e8%a1%8c&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;本地磁盘建立一个空目录C:/maven/hello,命令行进入到hello目录，执行下面的命令 mvn archetype:generate -DgroupId=com.cloud.hellomaven -DartifactId=hellomaven-service -Dversion=1.0.0-SNAPSHOT -Dpackage=com.cloud.service&lt;/p&gt;
&lt;p&gt;执行成功的话会自动在hello中创建符合maven项目约定的目录结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;◆ archetype:generate：生成maven项目骨架。&lt;/p&gt;
&lt;p&gt;◆ DgroupId指定maven坐标的groupId&lt;/p&gt;
&lt;p&gt;◆ DartifactId指定maven坐标的artifactId&lt;/p&gt;
&lt;p&gt;◆ Dversion指定maven坐标的version&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>一小时教你学会 Maven 项目的构建与管理(1)</title>
      <link>http://localhost:1313/other/post-390/</link>
      <pubDate>Sun, 29 Oct 2017 15:23:34 +0000</pubDate>
      
      <guid>http://localhost:1313/other/post-390/</guid>
      <description>&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Maven翻译成中文是“专家、内行”。Maven是Apache组织中一个颇为成功的开源项目，Maven主要服务于基于Java平台的项目构建、依赖管理和项目信息管理的优秀工具。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-来自小马哥的故事&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Maven是优秀的构建工具：自动化构建过程、跨平台、标准化构建过程。&lt;/p&gt;
&lt;p&gt;Maven为Java开发者提供了一个免费的中央仓库，其中几乎可以找到任何流行的开源类库，通过Maven的衍生工具Nexus，可以进行快速的搜索。Maven项目目录结构有约定的规则，约定优于配置（Convention Over Configuration）。&lt;/p&gt;
&lt;p&gt;Ant（Another Neat Tool）另一个整洁的工具，Tomcat构建，过程式，开发者需要显式的指定每一个目标以及完成该目标所需要执行的任务，每一个项目都需要重新编写这一过程。&lt;/p&gt;
&lt;p&gt;Maven是声明式的，项目构建过程和过程各阶段所需工作都要插件实现，大部分插件都是现成的，开发者只需要声明项目的基本元素，Maven就可以执行内置的，完整的构建过程。&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;Maven 基础环境配置与基本命令 
    &lt;div id=&#34;maven-基础环境配置与基本命令&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#maven-%e5%9f%ba%e7%a1%80%e7%8e%af%e5%a2%83%e9%85%8d%e7%bd%ae%e4%b8%8e%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;

&lt;h4 class=&#34;relative group&#34;&gt;Maven的安装与配置分析 
    &lt;div id=&#34;maven的安装与配置分析&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#maven%e7%9a%84%e5%ae%89%e8%a3%85%e4%b8%8e%e9%85%8d%e7%bd%ae%e5%88%86%e6%9e%90&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;

&lt;h5 class=&#34;relative group&#34;&gt;Maven环境的安装 
    &lt;div id=&#34;maven环境的安装&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#maven%e7%8e%af%e5%a2%83%e7%9a%84%e5%ae%89%e8%a3%85&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h5&gt;
&lt;p&gt;安装环境：Jdk1.7、Maven-3.5.0&lt;/p&gt;
&lt;p&gt;第一步：JDK安装与配置。Windows和Linux下安装步骤可自行查找。&lt;/p&gt;
&lt;p&gt;第二步：Maven的下载。官方下载地址：http://maven.apache.org/download.cgi&lt;/p&gt;
&lt;p&gt;当前最新版本3.5.0，Windows上安装下载apache-maven-3.5.0-bin.zip&lt;/p&gt;
&lt;p&gt;Linux上安装下载 apache-maven-3.5.0-bin.tar.gz&lt;/p&gt;

&lt;h6 class=&#34;relative group&#34;&gt;Windows上安装Maven步骤： 
    &lt;div id=&#34;windows上安装maven步骤&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#windows%e4%b8%8a%e5%ae%89%e8%a3%85maven%e6%ad%a5%e9%aa%a4&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h6&gt;
&lt;p&gt;1.解压apache-maven-3.5.0-bin.zip到D:\develop\apache-maven-3.5.0&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>eclipse maven 项目 maven build 无反应</title>
      <link>http://localhost:1313/other/post-393/</link>
      <pubDate>Thu, 26 Oct 2017 05:19:41 +0000</pubDate>
      
      <guid>http://localhost:1313/other/post-393/</guid>
      <description>&lt;p&gt;&lt;a
  href=&#34;http://localhost:1313/tag/maven&#34;&gt;maven&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;eclipse maven 项目 使用maven build ，clean 等命令均无反应，控制台无任何输出&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-来自小马哥的故事&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;1、打开Window &amp;ndash;&amp;gt; Preferences &amp;ndash;&amp;gt; Java &amp;ndash;&amp;gt; Installed JREs&lt;/p&gt;
&lt;p&gt;2、选择编辑installed JREs&lt;/p&gt;
&lt;p&gt;3、在Default VM arguments行加入下面的值&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-Dmaven.multiModuleProjectDirectory=$MAVEN_HOME
```1.
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
  </channel>
</rss>
